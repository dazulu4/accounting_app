name: Deploy to AWS SAM

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Run tests
      run: |
        poetry run pytest --cov=domain --cov=application --cov=infrastructure --cov-fail-under=70
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
    
    - name: Install dependencies
      run: |
        poetry install
    
    - name: Build SAM application
      run: |
        poetry run python scripts/build.py
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: sam-build
        path: package/

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: sam-build
        path: package/
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1
    
    - name: Install AWS SAM
      run: |
        curl -L https://github.com/aws/aws-sam-cli/releases/latest/download/sam-linux-x86_64.zip -o sam.zip
        unzip sam.zip -d sam-installation
        sudo ./sam-installation/install
    
    - name: Deploy to AWS
      run: |
        cd package
        sam deploy --no-confirm-changeset --capabilities CAPABILITY_IAM
      env:
        DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
        DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
        DATABASE_USER: ${{ secrets.DATABASE_USER }}
        DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
    
    - name: Get deployment URL
      run: |
        STACK_NAME="accounting-app-production"
        API_URL=$(aws cloudformation describe-stacks --stack-name $STACK_NAME --query 'Stacks[0].Outputs[?OutputKey==`AccountingApi`].OutputValue' --output text)
        echo "API_URL=$API_URL" >> $GITHUB_ENV
        echo "ðŸš€ Deployed to: $API_URL" 