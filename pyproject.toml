[tool.poetry]
name = "accounting_app"
version = "0.1.0"
description = "Accounting backend usando Clean Architecture con Flask"
authors = ["Tu Nombre <tu.email@example.com>"]
readme = "README.md"
packages = [{ include = "application" }, { include = "domain" }, { include = "infrastructure" }]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"

sqlalchemy = {version = "^2.0.41", extras = ["asyncio"]}
aiomysql = "^0.2.0"
pymysql = "^1.1.1"
databases = "^0.9.0"
alembic = "^1.16.4"
pydantic = "^2.11.7"
pydantic-settings = "^2.10.1"
flask = "^3.1.1"
flask-cors = "^6.0.1"
requests = "^2.32.4"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-asyncio = "^1.1.0"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"


[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=domain",
    "--cov=application", 
    "--cov=infrastructure",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=70"
]
markers = [
    "unit: Pruebas unitarias",
    "integration: Pruebas de integraciÃ³n",
    "slow: Pruebas lentas",
    "database: Pruebas de base de datos"
]

[tool.coverage.run]
omit = [
    "*/__init__.py",
    "*/main.py", 
    "*/migration/*",
    "*/scripts/*",
    "*/tests/*"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
