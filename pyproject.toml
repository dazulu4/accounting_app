[tool.poetry]
name = "accounting_app"
version = "0.1.0"
description = "Enterprise Accounting Backend using Clean Architecture with Flask"
authors = ["Accounting Team <team@company.com>"]
readme = "README.md"
packages = [
    { include = "application" }, 
    { include = "domain" }, 
    { include = "infrastructure" }
]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"

# Web Framework
flask = "^3.1.1"
flask-cors = "^6.0.1"

# Database (Synchronous SQLAlchemy)
sqlalchemy = "^2.0.41"
pymysql = "^1.1.1"
alembic = "^1.16.4"

# Data Validation and Configuration
pydantic = "^2.11.7"
pydantic-settings = "^2.10.1"

# Utilities
requests = "^2.32.4"
structlog = "^25.4.0"

[tool.poetry.group.dev.dependencies]
# Testing Framework
pytest = "^8.4.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"

# Code Quality
black = "^23.0.0"
isort = "^5.13.0"
mypy = "^1.8.0"
flake8 = "^6.0.0"

# Development Tools
pre-commit = "^3.5.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=domain",
    "--cov=application", 
    "--cov=infrastructure",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=85"
]
markers = [
    "unit: Unit tests for isolated components",
    "integration: Integration tests for component interaction",
    "e2e: End-to-end tests for complete workflows",
    "slow: Tests that take longer than usual to run",
    "database: Tests that require database connection"
]

[tool.coverage.run]
source = ["domain", "application", "infrastructure"]
omit = [
    "*/__init__.py",
    "*/main.py", 
    "*/migration/*",
    "*/scripts/*",
    "*/tests/*",
    "*/conftest.py"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "def __str__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:"
]
show_missing = true
fail_under = 85
precision = 2

[tool.black]
line-length = 100
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
  | migration/versions
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pymysql.*",
    "flask_cors.*"
]
ignore_missing_imports = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
