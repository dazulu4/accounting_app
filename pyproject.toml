[tool.poetry]
name = "accounting_app"
version = "0.1.0"
description = "Enterprise Accounting Backend using Clean Architecture with Flask"
authors = ["Accounting Team <team@company.com>"]
readme = "README.md"
packages = [
    { include = "application" }, 
    { include = "domain" }, 
    { include = "infrastructure" }
]

[tool.poetry.dependencies]
python = ">=3.11,<3.14"

# Web Framework
flask = "^3.1.1"
flask-cors = "^6.0.1"

# Database (Synchronous SQLAlchemy)
sqlalchemy = "^2.0.41"
pymysql = "^1.1.1"
alembic = "^1.16.4"

# Data Validation and Configuration
pydantic = {extras = ["email"], version = "^2.11.7"}
pydantic-settings = "^2.10.1"

# Utilities
structlog = "^25.4.0"
python-dotenv = "^1.1.1"
cryptography = "^45.0.5"

[tool.poetry.group.dev.dependencies]
pytest = "^8.4.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"

# =============================================================================
# Herramientas de Calidad de Código (Linters, Formateadores, etc.)
# =============================================================================
black = "^25.1.0"
isort = "^6.0.1"
mypy = "^1.17.0"
flake8 = "^7.3.0"
autoflake = "^2.3.1"
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.venv
  | build
  | dist
  | migration/versions
)/
'''

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Más permisivo
disallow_incomplete_defs = false  # Más permisivo
check_untyped_defs = true
disallow_untyped_decorators = false  # Más permisivo
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = false  # Más permisivo
ignore_missing_imports = true  # Más permisivo
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "pymysql.*",
    "flask_cors.*",
    "alembic.*"
]
ignore_missing_imports = true

# =============================================================================
# Configuración de Pruebas (pytest)
# =============================================================================
[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--strict-markers",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-fail-under=50", # Umbral de cobertura ajustado
    "-ra", # Mostrar resumen de todas las pruebas
]
markers = [
    "unit: Pruebas unitarias",
    "database: Pruebas que requieren base de datos",
]

# =============================================================================
# Configuración de Cobertura (coverage)
# =============================================================================
[tool.coverage.run]
branch = true
source = ["domain", "infrastructure"]
omit = [
    "*/__init__.py",
    "migration/*",
    "scripts/*",
    "tests/*",
    ".aws-sam/*",
]

[tool.coverage.report]
show_missing = true
skip_empty = true
fail_under = 50 # Umbral de cobertura ajustado
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "if TYPE_CHECKING:",
]

[tool.coverage.html]
directory = "htmlcov"

# =============================================================================
# Configuración de flake8 (Linter)
# =============================================================================
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    ".pytest_cache",
    ".venv",
    "build",
    "dist",
    "migration/versions",
    ".aws-sam"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
