[tool:pytest]
# =============================================================================
# Pytest Configuration - Enterprise Edition
# =============================================================================
# Professional pytest configuration for enterprise testing pyramid
# with coverage, performance monitoring, and comprehensive reporting.

# Test discovery
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*

# Minimum version requirements
minversion = 7.0

# Test markers for categorization
markers =
    unit: Unit tests (fast, isolated, no external dependencies)
    integration: Integration tests (medium speed, cross-component)
    e2e: End-to-end tests (slow, full system integration)
    database: Tests requiring database connectivity
    api: Tests for HTTP API endpoints
    performance: Performance and load tests
    slow: Tests that take more than 1 second
    smoke: Smoke tests for quick validation

# Coverage configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=domain
    --cov=application
    --cov=infrastructure
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=term-missing
    --cov-fail-under=85
    --cov-branch
    --cov-config=.coveragerc
    --durations=10
    --maxfail=5

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test execution configuration
timeout = 300
timeout_method = thread

# Warnings configuration
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    error::pytest.PytestUnraisableExceptionWarning

# Test collection configuration
collect_ignore = [
    "setup.py",
    "conftest.py",
    ".aws-sam",
    "node_modules",
    ".venv",
    "venv",
    "__pycache__"
]

# Asyncio configuration
asyncio_mode = auto

# Performance monitoring
durations_min = 1.0 