AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  Backend para la Aplicación de Contabilidad
  Despliega la API Flask como una función AWS Lambda a través de API Gateway.

# ==============================================================================
# Parámetros Globales
# ==============================================================================
Globals:
  Function:
    Timeout: 30
    MemorySize: 512
    Runtime: python3.11
    Tracing: Active
    Handler: application.lambda_handler.handler
    CodeUri: ./.aws-sam/build/

# ==============================================================================
# Recursos de la Aplicación
# ==============================================================================
Resources:
  
  # --- Función Lambda Principal de la API ---
  AccountingApiFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-api"
      Environment:
        Variables:
          # Estas variables se resuelven durante el despliegue
          APP_ENVIRONMENT: !Ref AWS::StackName # El nombre del stack define el entorno
          LOG_LEVEL: "INFO"
          DATABASE_USERNAME: "admin" # O el usuario que corresponda
          DATABASE_NAME: "accounting" # O el nombre de la BD que corresponda
          
          # --- Resolución Segura de Secretos y Parámetros ---
          DATABASE_HOST: !Sub "{{resolve:ssm:/accounting-app/${AWS::StackName}/database/host}}"
          DATABASE_PORT: !Sub "{{resolve:ssm:/accounting-app/${AWS::StackName}/database/port}}"
          DATABASE_PASSWORD: !Sub "{{resolve:secretsmanager:accounting-app/${AWS::StackName}/database/password:SecretString:password}}"
          
      Events:
        ApiGatewayRoot:
          Type: Api
          Properties:
            Path: /
            Method: ANY
            RestApiId: !Ref AccountingApi
        ApiGatewayProxy:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref AccountingApi

  # --- API Gateway ---
  AccountingApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${AWS::StackName}-api"
      StageName: api
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"

# ==============================================================================
# Salidas del Stack (Outputs)
# ==============================================================================
Outputs:

  ApiUrl:
    Description: "URL del API Gateway para la aplicación"
    Value: !Sub "https://${AccountingApi}.execute-api.${AWS::Region}.amazonaws.com/api"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"
      
  FunctionArn:
    Description: "ARN de la función Lambda principal"
    Value: !GetAtt AccountingApiFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-FunctionArn" 